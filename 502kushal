{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOS46IrX0FmhgkfDLNo21ym",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/palsalar65/IT502_A2_Programming1-_764705206_1/blob/master/502kushal\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x9Q1UmEepL7D",
        "outputId": "f3fa898b-5bf4-4f35-e13e-de7f21ddf153"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "SyntaxError handled: Ensure correct syntax in code.\n",
            "IndexError handled: Room index out of range.\n",
            "NameError handled: Variable is not defined.\n",
            "Press Ctrl+D or Ctrl+Z to trigger EOFError: \u0004\n",
            "EOFError handled: End of file reached.\n",
            "ImportError handled: Module not found.\n",
            "\n",
            "************ LANGHAM HOTEL MANAGEMENT SYSTEM ************\n",
            "1. Allocate Room\n",
            "2. Billing and Deallocation\n",
            "3. Exit\n",
            "Enter your choice: 3\n",
            "Exiting application.\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "import shutil\n",
        "from datetime import datetime\n",
        "\n",
        "\"\"\"\n",
        "***********************************************************************************\n",
        "LANGHAM HOTEL MANAGEMENT SYSTEM\n",
        "***********************************************************************************\n",
        "Developed by: Kushal Pal Salar\n",
        "Student ID: 764705529\n",
        "Description:\n",
        "This is a Python-based management system for a hotel. It allows hotel staff to:\n",
        "- Add, delete, and display room details.\n",
        "- Allocate rooms to customers and manage billing.\n",
        "- Backup data for rooms and allocations.\n",
        "***********************************************************************************\n",
        "\"\"\"\n",
        "\n",
        "# Student ID for file naming\n",
        "student_id = \"764705529\"\n",
        "\n",
        "# Paths for storing room and allocation data\n",
        "base_path = os.path.expanduser(\"~/Documents/LANGHAM\")\n",
        "os.makedirs(base_path, exist_ok=True)\n",
        "\n",
        "room_file_path = os.path.join(base_path, f\"rooms_{student_id}.txt\")\n",
        "allocation_file_path = os.path.join(base_path, f\"LHMS_{student_id}.txt\")\n",
        "\n",
        "# Lists for in-memory storage\n",
        "list_of_rooms = []\n",
        "list_of_room_allocations = []\n",
        "\n",
        "# Function to handle SyntaxError for demonstration\n",
        "try:\n",
        "    eval(\"if True print('Syntax Error example')\")\n",
        "except SyntaxError:\n",
        "    print(\"SyntaxError handled: Ensure correct syntax in code.\")\n",
        "\n",
        "# Function to save room data\n",
        "def save_rooms_to_file():\n",
        "    try:\n",
        "        with open(room_file_path, \"w\") as file:\n",
        "            for room in list_of_rooms:\n",
        "                file.write(\n",
        "                    f\"{room['room_no']},{room['floor_no']},{room['room_type']},{room['room_rate']},{room['is_allocated']}\\n\"\n",
        "                )\n",
        "    except IOError:\n",
        "        print(\"IOError handled: Could not write to the file.\")\n",
        "\n",
        "# Function to load room data\n",
        "def load_rooms_from_file():\n",
        "    try:\n",
        "        if os.path.exists(room_file_path):\n",
        "            with open(room_file_path, \"r\") as file:\n",
        "                for line in file:\n",
        "                    room_no, floor_no, room_type, room_rate, is_allocated = line.strip().split(\",\")\n",
        "                    list_of_rooms.append(\n",
        "                        {\n",
        "                            \"room_no\": int(room_no),\n",
        "                            \"floor_no\": int(floor_no),\n",
        "                            \"room_type\": room_type,\n",
        "                            \"room_rate\": float(room_rate),\n",
        "                            \"is_allocated\": is_allocated == \"True\",\n",
        "                        }\n",
        "                    )\n",
        "    except FileNotFoundError:\n",
        "        print(\"FileNotFoundError handled: Room file not found.\")\n",
        "    except ValueError:\n",
        "        print(\"ValueError handled: Incorrect data format in room file.\")\n",
        "\n",
        "# Function to allocate room\n",
        "def allocate_room():\n",
        "    try:\n",
        "        room_number = int(input(\"Enter the room number to allocate: \"))\n",
        "        for room in list_of_rooms:\n",
        "            if room[\"room_no\"] == room_number and not room[\"is_allocated\"]:\n",
        "                customer_name = input(\"Enter customer name: \")\n",
        "                allocation_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n",
        "                room[\"is_allocated\"] = True\n",
        "                list_of_room_allocations.append(\n",
        "                    {\"allocated_room_no\": room_number, \"customer_name\": customer_name, \"allocation_time\": allocation_time}\n",
        "                )\n",
        "                save_rooms_to_file()\n",
        "                print(\"Room allocated successfully!\")\n",
        "                return\n",
        "        print(\"Room not available.\")\n",
        "    except ValueError:\n",
        "        print(\"ValueError handled: Invalid room number input.\")\n",
        "    except TypeError:\n",
        "        print(\"TypeError handled: Invalid data type during allocation.\")\n",
        "\n",
        "# Billing and Deallocation Function\n",
        "def billing_and_deallocation():\n",
        "    try:\n",
        "        room_number = int(input(\"Enter the room number for billing and deallocation: \"))\n",
        "        for allocation in list_of_room_allocations:\n",
        "            if allocation[\"allocated_room_no\"] == room_number:\n",
        "                days_stayed = int(input(\"Enter number of days stayed: \"))\n",
        "                if days_stayed == 0:\n",
        "                    raise ZeroDivisionError\n",
        "                for room in list_of_rooms:\n",
        "                    if room[\"room_no\"] == room_number:\n",
        "                        total_bill = days_stayed * room[\"room_rate\"]\n",
        "                        print(f\"Total Bill for Room {room_number}: ${total_bill:.2f}\")\n",
        "                        room[\"is_allocated\"] = False\n",
        "                        list_of_room_allocations.remove(allocation)\n",
        "                        save_rooms_to_file()\n",
        "                        print(\"Billing completed and room deallocated.\")\n",
        "                        return\n",
        "        print(\"Room not found or not allocated.\")\n",
        "    except ZeroDivisionError:\n",
        "        print(\"ZeroDivisionError handled: Days stayed cannot be zero.\")\n",
        "    except ValueError:\n",
        "        print(\"ValueError handled: Invalid input for days stayed.\")\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# Main function\n",
        "def main():\n",
        "    load_rooms_from_file()\n",
        "    while True:\n",
        "        print(\"\\n************ LANGHAM HOTEL MANAGEMENT SYSTEM ************\")\n",
        "        print(\"1. Allocate Room\")\n",
        "        print(\"2. Billing and Deallocation\")\n",
        "        print(\"3. Exit\")\n",
        "        choice = input(\"Enter your choice: \")\n",
        "        if choice == \"1\":\n",
        "            allocate_room()\n",
        "        elif choice == \"2\":\n",
        "            billing_and_deallocation()\n",
        "        elif choice == \"3\":\n",
        "            print(\"Exiting application.\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Invalid choice. Try again.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ]
    }
  ]
}